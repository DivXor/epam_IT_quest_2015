-- MySQL Script generated by MySQL Workbench
-- 12/20/15 14:27:28
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema it_quest
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `it_quest` ;

-- -----------------------------------------------------
-- Schema it_quest
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `it_quest` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `it_quest` ;

-- -----------------------------------------------------
-- Table `it_quest`.`ASSOCIATIONS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`ASSOCIATIONS` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`ASSOCIATIONS` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `IMG1` VARCHAR(100) NOT NULL COMMENT '',
  `IMG2` VARCHAR(100) NOT NULL COMMENT '',
  `IMG3` VARCHAR(100) NOT NULL COMMENT '',
  `IMG4` VARCHAR(100) NOT NULL COMMENT '',
  `HINT_TOTAL` INT NOT NULL DEFAULT 0 COMMENT '',
  `BASE_SCORE` DECIMAL NOT NULL DEFAULT 1 COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '');


-- -----------------------------------------------------
-- Table `it_quest`.`TASK`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`TASK` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`TASK` (
  `ID` INT NULL COMMENT '',
  `TYPE` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '')
  ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `it_quest`.`USERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`USERS` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`USERS` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `NAME` VARCHAR(100) NULL COMMENT '',
  `PASSWORD` VARCHAR(100) NULL COMMENT '',
  `ROLE` ENUM('ADMIN', 'ANONYMOUS', 'USER') NULL COMMENT '',
  `TASK_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '',
  INDEX `fk_USERS_TASK1_idx` (`TASK_ID` ASC)  COMMENT '',
  CONSTRAINT `fk_USERS_TASK1`
  FOREIGN KEY (`TASK_ID`)
  REFERENCES `it_quest`.`TASK` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `it_quest`.`ASSOCIATIONS_HISTORY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`ASSOCIATIONS_HISTORY` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`ASSOCIATIONS_HISTORY` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `HINT_COUNTER` INT NULL COMMENT '',
  `TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `ASSOCIATIONS_ID` INT NOT NULL COMMENT '',
  `USER_ID` INT NOT NULL COMMENT '',
  `IS_ANSWER_RIGHT` TINYINT(1) NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '',
  INDEX `ASSOCIATIONS_FK` (`ASSOCIATIONS_ID` ASC)  COMMENT '',
  INDEX `ASSOCIATIONS_HISTORY_USER_FK` (`USER_ID` ASC)  COMMENT '',
  CONSTRAINT `ASSOCIATIONS_FK`
  FOREIGN KEY (`ASSOCIATIONS_ID`)
  REFERENCES `it_quest`.`ASSOCIATIONS` (`ID`),
  CONSTRAINT `ASSOCIATIONS_HISTORY_USER_FK`
  FOREIGN KEY (`USER_ID`)
  REFERENCES `it_quest`.`USERS` (`ID`));


-- -----------------------------------------------------
-- Table `it_quest`.`COMMENTS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`COMMENTS` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`COMMENTS` (
  `ID` INT NULL DEFAULT NULL AUTO_INCREMENT COMMENT '',
  `MESSAGE` VARCHAR(500) NULL DEFAULT NULL COMMENT '',
  `TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `USER_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '',
  INDEX `COMMENTS_USER_FK` (`USER_ID` ASC)  COMMENT '',
  CONSTRAINT `COMMENTS_USER_FK`
  FOREIGN KEY (`USER_ID`)
  REFERENCES `it_quest`.`USERS` (`ID`));


-- -----------------------------------------------------
-- Table `it_quest`.`GRAMMAR_QUIZ`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`GRAMMAR_QUIZ` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`GRAMMAR_QUIZ` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `ANSWER` VARCHAR(10) NULL COMMENT '',
  `SENTENCE` VARCHAR(200) NULL COMMENT '',
  `BASE_SCORE` DECIMAL NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '');


-- -----------------------------------------------------
-- Table `it_quest`.`GRAMMAR_HISTORY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`GRAMMAR_HISTORY` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`GRAMMAR_HISTORY` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `GRAMMAR_QUIZ_ID` INT NOT NULL COMMENT '',
  `USER_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '',
  INDEX `GRAMMAR_HISTORY_USER_FK` (`USER_ID` ASC)  COMMENT '',
  INDEX `GRAMMAR_QUIZ_FK` (`GRAMMAR_QUIZ_ID` ASC)  COMMENT '',
  CONSTRAINT `GRAMMAR_HISTORY_USER_FK`
  FOREIGN KEY (`USER_ID`)
  REFERENCES `it_quest`.`USERS` (`ID`),
  CONSTRAINT `GRAMMAR_QUIZ_FK`
  FOREIGN KEY (`GRAMMAR_QUIZ_ID`)
  REFERENCES `it_quest`.`GRAMMAR_QUIZ` (`ID`));


-- -----------------------------------------------------
-- Table `it_quest`.`MAZE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`MAZE` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`MAZE` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `WX` INT NOT NULL COMMENT '',
  `WY` INT NOT NULL COMMENT '',
  `WORD` VARCHAR(100) NOT NULL COMMENT '',
  `BASE_SCORE` DECIMAL NOT NULL DEFAULT 0 COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '');


-- -----------------------------------------------------
-- Table `it_quest`.`MAZE_HISTORY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`MAZE_HISTORY` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`MAZE_HISTORY` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `MAZE_ID` INT NOT NULL COMMENT '',
  `USER_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '',
  INDEX `MAZE_FK` (`MAZE_ID` ASC)  COMMENT '',
  INDEX `MAZE_HISTORY_USER_FK` (`USER_ID` ASC)  COMMENT '',
  CONSTRAINT `MAZE_FK`
  FOREIGN KEY (`MAZE_ID`)
  REFERENCES `it_quest`.`MAZE` (`ID`),
  CONSTRAINT `MAZE_HISTORY_USER_FK`
  FOREIGN KEY (`USER_ID`)
  REFERENCES `it_quest`.`USERS` (`ID`));


-- -----------------------------------------------------
-- Table `it_quest`.`QUEST`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`QUEST` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`QUEST` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `isDone` TINYINT(1) NULL COMMENT '',
  `USERS_ID` INT NOT NULL COMMENT '',
  `SCORE` DECIMAL NULL COMMENT '',
  `TASK_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '',
  INDEX `fk_TASKS_USERS1_idx` (`USERS_ID` ASC)  COMMENT '',
  INDEX `fk_QUEST_TASK1_idx` (`TASK_ID` ASC)  COMMENT '',
  CONSTRAINT `fk_TASKS_USERS1`
  FOREIGN KEY (`USERS_ID`)
  REFERENCES `it_quest`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_QUEST_TASK1`
  FOREIGN KEY (`TASK_ID`)
  REFERENCES `it_quest`.`TASK` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `it_quest`.`WORD_SEARCH`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`WORD_SEARCH` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`WORD_SEARCH` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `ANSWER` VARCHAR(100) NULL COMMENT '',
  `BASE_SCORE` DECIMAL NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '');


-- -----------------------------------------------------
-- Table `it_quest`.`WORD_SEARCH_HISTORY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`WORD_SEARCH_HISTORY` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`WORD_SEARCH_HISTORY` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `WORD_SEARCH_ID` INT NOT NULL COMMENT '',
  `USER_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '',
  INDEX `WORD_SEARCH_FK` (`WORD_SEARCH_ID` ASC)  COMMENT '',
  INDEX `WORD_SEARCH_HISTORY_USER_FK` (`USER_ID` ASC)  COMMENT '',
  CONSTRAINT `WORD_SEARCH_FK`
  FOREIGN KEY (`WORD_SEARCH_ID`)
  REFERENCES `it_quest`.`WORD_SEARCH` (`ID`),
  CONSTRAINT `WORD_SEARCH_HISTORY_USER_FK`
  FOREIGN KEY (`USER_ID`)
  REFERENCES `it_quest`.`USERS` (`ID`));


-- -----------------------------------------------------
-- Table `it_quest`.`EXCESS_IMAGE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`EXCESS_IMAGE` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`EXCESS_IMAGE` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `EXCESS_IMAGE_NUMBER` INT NULL COMMENT '',
  `IMG1` VARCHAR(100) NULL COMMENT '',
  `IMG2` VARCHAR(100) NULL COMMENT '',
  `IMG3` VARCHAR(100) NULL COMMENT '',
  `IMG4` VARCHAR(100) NULL COMMENT '',
  `BASE_SCORE` DECIMAL NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '');


-- -----------------------------------------------------
-- Table `it_quest`.`EXCESS_IMAGE_HISTORY`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `it_quest`.`EXCESS_IMAGE_HISTORY` ;

CREATE TABLE IF NOT EXISTS `it_quest`.`EXCESS_IMAGE_HISTORY` (
  `ID` INT NULL AUTO_INCREMENT COMMENT '',
  `TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '',
  `USER_ID` INT NOT NULL COMMENT '',
  `EXCESS_IMAGE_ID` INT NOT NULL COMMENT '',
  PRIMARY KEY (`ID`)  COMMENT '',
  INDEX `WRONG_PICTURE_USER_FK` (`USER_ID` ASC)  COMMENT '',
  INDEX `fk_EXCESS_IMAGE_HISTORY_EXCESS_IMAGE1_idx` (`EXCESS_IMAGE_ID` ASC)  COMMENT '',
  CONSTRAINT `WRONG_PICTURE_USER_FK`
  FOREIGN KEY (`USER_ID`)
  REFERENCES `it_quest`.`USERS` (`ID`),
  CONSTRAINT `fk_EXCESS_IMAGE_HISTORY_EXCESS_IMAGE1`
  FOREIGN KEY (`EXCESS_IMAGE_ID`)
  REFERENCES `it_quest`.`EXCESS_IMAGE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

COMMIT;